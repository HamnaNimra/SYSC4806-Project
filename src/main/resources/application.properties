#spring.datasource.url= ${JDBC_DATABASE_URL}
#spring.datasource.url= jdbc:postgresql://localhost:5432/amazin?user=postgres&password={your-password}
#spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.platform=postgres
#spring.jpa.database=POSTGRESQL

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.maxActive=10
#spring.datasource.maxIdle=5
#spring.datasource.minIdle=2
#spring.datasource.initialSize=5
#spring.datasource.removeAbandoned=true
#spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource

spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.jpa.database=POSTGRESQL
#spring.datasource.platform=postgres
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto= create-drop
spring.datasource.initialization-mode=always